{
  "config": {
    "title": "React Npm Package Boilerplate",
    "description": "Boilerplate to quickstart React component development",
    "menu": [],
    "version": "1.0.0",
    "repository": null,
    "native": false,
    "themeConfig": {},
    "separator": "-"
  },
  "entries": [
    {
      "key": "README.md",
      "value": {
        "id": "04c6e90faac2675aa89e2176d2eec7d8",
        "filepath": "README.md",
        "fullpath": "/home/andrew/workspace/react-see-through/README.md",
        "link": "",
        "slug": "readme",
        "route": "/readme",
        "name": "Readme",
        "menu": "",
        "headings": [
          {
            "slug": "react-see-through",
            "depth": 1,
            "value": "react-see-through"
          }
        ]
      }
    },
    {
      "key": "docs/SeeThrough.mdx",
      "value": {
        "name": "<SeeThrough>",
        "id": "9fb0927b5c5f9cee3d392143d5442ba2",
        "filepath": "docs/SeeThrough.mdx",
        "fullpath": "/home/andrew/workspace/react-see-through/docs/SeeThrough.mdx",
        "link": "",
        "slug": "docs-see-through",
        "route": "/docs-see-through",
        "menu": "",
        "headings": [
          {
            "slug": "seethrough",
            "depth": 1,
            "value": "SeeThrough"
          },
          {
            "slug": "properties",
            "depth": 2,
            "value": "Properties"
          },
          {
            "slug": "basic-usage",
            "depth": 2,
            "value": "Basic usage"
          }
        ]
      }
    }
  ],
  "props": [
    {
      "key": "docs/Example.js",
      "value": [
        {
          "description": "",
          "displayName": "Example",
          "methods": [],
          "actualName": "Example"
        }
      ]
    },
    {
      "key": "src/SeeThrough/SeeThrough.js",
      "value": [
        {
          "description": "",
          "displayName": "SeeThrough",
          "methods": [],
          "props": {
            "children": {
              "type": {
                "name": "any"
              },
              "required": false,
              "description": "The elements that that you want to be see-through."
            },
            "active": {
              "type": {
                "name": "bool"
              },
              "required": false,
              "description": "Whether or not this <SeeThrough> is active.\nCurrently, only one active SeeThrough at a time is supported.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "onClick": {
              "type": {
                "name": "func"
              },
              "required": false,
              "description": "A function to call when the see through component is clicked. This only works when the component is \"active\".\nThe function is passed the following arguments:\n\n   mask - a boolean indicating whether the click was on the masked (black) or unmasked (non-block) area",
              "defaultValue": {
                "value": "() => {}",
                "computed": false
              }
            },
            "className": {
              "type": {
                "name": "string"
              },
              "required": false,
              "description": "<SeeThrough> creates a <div> wrapper around all the contained elements.\nThis could break layouts that require very particular element hierarchies, like flex containers.\n\"className\" allows you to style that <div> in-case adding it breaks your layout.",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "style": {
              "type": {
                "name": "any"
              },
              "required": false,
              "description": "<SeeThrough> creates a <div> wrapper around all the contained elements.\nThis could break layouts that require very particular element hierarchies, like flex containers.\n\"style\" allows you to style that <div> in-case adding it breaks your layout.",
              "defaultValue": {
                "value": "{}",
                "computed": false
              }
            }
          }
        }
      ]
    }
  ]
}
