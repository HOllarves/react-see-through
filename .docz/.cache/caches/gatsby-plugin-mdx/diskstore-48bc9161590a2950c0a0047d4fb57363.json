{"expireTime":9007200840018437000,"key":"gatsby-plugin-mdx-entire-payload-aa326e28465fe2340309062ad7acbbf6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/andrew/workspace/react-see-through/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":119,"offset":120},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":122},"end":{"line":5,"column":29,"offset":150},"indent":[]}},{"type":"import","value":"import { useState } from 'react';\nimport { Playground, Props } from 'docz'\nimport SeeThrough from '../src/SeeThrough/SeeThrough';","position":{"start":{"line":8,"column":1,"offset":153},"end":{"line":10,"column":55,"offset":282},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Alert","position":{"start":{"line":12,"column":3,"offset":286},"end":{"line":12,"column":8,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":284},"end":{"line":12,"column":8,"offset":291},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Properties","position":{"start":{"line":14,"column":4,"offset":296},"end":{"line":14,"column":14,"offset":306},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":293},"end":{"line":14,"column":14,"offset":306},"indent":[]}},{"type":"jsx","value":"<Props of={ SeeThrough } />","position":{"start":{"line":16,"column":1,"offset":308},"end":{"line":16,"column":28,"offset":335},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basic usage","position":{"start":{"line":18,"column":4,"offset":340},"end":{"line":18,"column":15,"offset":351},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":337},"end":{"line":18,"column":15,"offset":351},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [active, setActive] = useState(false);\n    return (\n      <div>\n        <button onClick={ () => setActive(!active) }>Toggle See Through</button>\n        <SeeThrough active={ active }>Some message</SeeThrough>\n      </div>\n    );\n  }}\n</Playground>","position":{"start":{"line":20,"column":1,"offset":353},"end":{"line":30,"column":14,"offset":634},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":33,"column":1,"offset":637},"end":{"line":33,"column":31,"offset":667},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":33,"column":31,"offset":667}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/andrew/workspace/react-see-through/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz'\nimport SeeThrough from '../src/SeeThrough/SeeThrough';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={SeeThrough} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [active, setActive] = useState(false)\\n  return (\\n    <div>\\n      <button onClick={() => setActive(!active)}>Toggle See Through</button>\\n      <SeeThrough active={active}>Some message</SeeThrough>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      SeeThrough\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(false);\n        return <div>\n        <button onClick={() => setActive(!active)}>Toggle See Through</button>\n        <SeeThrough active={active} mdxType=\"SeeThrough\">Some message</SeeThrough>\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}